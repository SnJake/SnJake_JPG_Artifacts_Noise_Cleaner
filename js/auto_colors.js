import { app } from "../../../scripts/app.js";

// –ë–∞–∑–æ–≤–∞—è —Å—Ö–µ–º–∞ –Ω–∞ —Å–ª—É—á–∞–π –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
const DEFAULT_SCHEME = {
    color: "#2e2e36",
    bgcolor: "#41414a",
    titleText: "#e5e9f0"
};

// –¢–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø–∞–ª–∏—Ç—Ä—ã
const SCHEMES = {
    vlm: {            // –§–∏–æ–ª–µ—Ç–æ–≤–æ-–∏–Ω–¥–∏–≥–æ–≤–∞—è ‚Äî VLM / –º—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω–æ—Å—Ç—å
        color: "#3b2a6f",
        bgcolor: "#201833",
        titleText: "#efeaff"
    },
    utils: {          // –•–æ–ª–æ–¥–Ω—ã–π —Å—Ç–∞–ª—å–Ω–æ–π ‚Äî —É—Ç–∏–ª–∏—Ç—ã/—Å–ª—É–∂–µ–±–Ω—ã–µ
        color: "#2f4858",
        bgcolor: "#17232b",
        titleText: "#e6f8ff"
    },
    effects: {        // –ù–µ–æ–Ω–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã ‚Äî –ø–æ—Å—Ç–ø—Ä–æ—Ü–µ—Å—Å
        color: "#7a1fa2",
        bgcolor: "#2b1035",
        titleText: "#fdeaff"
    },
    adjustment: {     // –Ø–Ω—Ç–∞—Ä–Ω–æ-–º–µ–¥–Ω—ã–π ‚Äî –∫–æ—Ä—Ä–µ–∫—Ü–∏—è
        color: "#7c3f14",
        bgcolor: "#24160e",
        titleText: "#ffe3c2"
    },
    masks: {          // –¢—ë–º–Ω—ã–π –±–∏—Ä—é–∑–æ–≤—ã–π ‚Äî –º–∞—Å–∫–∏/—Å–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è
        color: "#0d4d4d",
        bgcolor: "#062a2a",
        titleText: "#d8ffff"
    },
    anynode: {        // –ì—Ä–∞—Ñ–∏—Ç ‚Äî –æ–±—ë—Ä—Ç–∫–∏/AnyNode
        color: "#3c3c3c",
        bgcolor: "#1f1f1f",
        titleText: "#f0f0f0"
    },
    pixelart: {       // –†–µ—Ç—Ä–æ-–∑–µ–ª—ë–Ω—ã–π ‚Äî –ø–∏–∫—Å–µ–ª—å-–∞—Ä—Ç
        color: "#1f6f3e",
        bgcolor: "#0f2317",
        titleText: "#e7ffef"
    },
    xyplot: {         // –•–æ–ª–æ–¥–Ω—ã–π —Å–∏–Ω–∏–π ‚Äî –≥—Ä–∞—Ñ–∏–∫–∏/–ø–ª–æ—Ç—ã
        color: "#12476b",
        bgcolor: "#0a273a",
        titleText: "#dbf2ff"
    },
    lora: {           // –§—É–∫—Å–∏—è ‚Äî –æ–±—É—á–µ–Ω–∏–µ/–∞–¥–∞–ø—Ç–∞—Ü–∏—è
        color: "#8b1e5c",
        bgcolor: "#2b0d20",
        titleText: "#ffd7eb"
    },
    detailer: {       // –ò–∑—É–º—Ä—É–¥ ‚Äî –¥–µ—Ç–µ–∫—Ç/–¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è
        color: "#2b6f5b",
        bgcolor: "#102b24",
        titleText: "#e0fff7"
    },
    yolo: {           // –ß—ë—Ä–Ω–æ-–∑–æ–ª–æ—Ç–æ–π ‚Äî –¥–µ—Ç–µ–∫—Ü–∏—è/YOLO
        color: "#6f5500",
        bgcolor: "#1a1503",
        titleText: "#ffeaa6"
    }
};

// –ü–µ—Ä–µ–∫—Ä—ã—Ç–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
const CATEGORY_SCHEMES = {
    "üòé SnJake/VLM": SCHEMES.vlm,
    "üòé SnJake/Utils": SCHEMES.utils,
    "üòé SnJake/Effects": SCHEMES.effects,
    "üòé SnJake/Adjustment": SCHEMES.adjustment,
    "üòé SnJake/Masks": SCHEMES.masks,
    "üòé SnJake/AnyNode": SCHEMES.anynode,
    "üòé SnJake/PixelArt": SCHEMES.pixelart,
    "üòé SnJake/XY Plot": SCHEMES.xyplot,
    "üòé SnJake/LoRA": SCHEMES.lora,
    "üòé SnJake/Detailer": SCHEMES.detailer,
    "üòé SnJake/YOLO": SCHEMES.yolo
};

function pickScheme(node) {
    const cat = (node?.constructor?.category || node?.category || "").toString();
    for (const key of Object.keys(CATEGORY_SCHEMES)) {
        if (cat.startsWith(key)) return CATEGORY_SCHEMES[key];
    }
    return DEFAULT_SCHEME;
}

function applyColors(node) {
    const s = pickScheme(node);
    node.color = s.color;
    node.bgcolor = s.bgcolor;
    try {
        if (node?.constructor) {
            node.constructor.title_text_color = s.titleText;
        }
    } catch {}
}

app.registerExtension({
    name: "SnJake.AutoColors",
    async nodeCreated(node) {
        const title = (node && (node.title || "")).toString();
        if (!title.startsWith("üòé")) return;
        applyColors(node);
    }
});
